var normalizeKey = {
	Esc: 'Escape',
	Spacebar: ' ',
	Left: 'ArrowLeft',
	Up: 'ArrowUp',
	Right: 'ArrowRight',
	Down: 'ArrowDown',
	Del: 'Delete',
	Win: 'OS',
	Menu: 'ContextMenu',
	Apps: 'ContextMenu',
	Scroll: 'ScrollLock',
	MozPrintableKey: 'Unidentified'
};

/**
 * Translation from legacy `keyCode` to HTML5 `key`
 * Only special keys supported, all others depend on keyboard layout or browser
 * @see https://developer.mozilla.org/en-US/docs/Web/API/KeyboardEvent#Key_names
 */
var translateToKey = {
	'8': 'Backspace',
	'9': 'Tab',
	'12': 'Clear',
	'13': 'Enter',
	'16': 'Shift',
	'17': 'Control',
	'18': 'Alt',
	'19': 'Pause',
	'20': 'CapsLock',
	'27': 'Escape',
	'32': ' ',
	'33': 'PageUp',
	'34': 'PageDown',
	'35': 'End',
	'36': 'Home',
	'37': 'ArrowLeft',
	'38': 'ArrowUp',
	'39': 'ArrowRight',
	'40': 'ArrowDown',
	'45': 'Insert',
	'46': 'Delete',
	'112': 'F1',
	'113': 'F2',
	'114': 'F3',
	'115': 'F4',
	'116': 'F5',
	'117': 'F6',
	'118': 'F7',
	'119': 'F8',
	'120': 'F9',
	'121': 'F10',
	'122': 'F11',
	'123': 'F12',
	'144': 'NumLock',
	'145': 'ScrollLock',
	'224': 'Meta'
};

var shorthandToLonghand = {
	animation: ['animationDelay', 'animationDirection', 'animationDuration', 'animationFillMode', 'animationIterationCount', 'animationName', 'animationPlayState', 'animationTimingFunction'],
	background: ['backgroundAttachment', 'backgroundClip', 'backgroundColor', 'backgroundImage', 'backgroundOrigin', 'backgroundPositionX', 'backgroundPositionY', 'backgroundRepeat', 'backgroundSize'],
	backgroundPosition: ['backgroundPositionX', 'backgroundPositionY'],
	border: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth', 'borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth', 'borderLeftColor', 'borderLeftStyle', 'borderLeftWidth', 'borderRightColor', 'borderRightStyle', 'borderRightWidth', 'borderTopColor', 'borderTopStyle', 'borderTopWidth'],
	borderBlockEnd: ['borderBlockEndColor', 'borderBlockEndStyle', 'borderBlockEndWidth'],
	borderBlockStart: ['borderBlockStartColor', 'borderBlockStartStyle', 'borderBlockStartWidth'],
	borderBottom: ['borderBottomColor', 'borderBottomStyle', 'borderBottomWidth'],
	borderColor: ['borderBottomColor', 'borderLeftColor', 'borderRightColor', 'borderTopColor'],
	borderImage: ['borderImageOutset', 'borderImageRepeat', 'borderImageSlice', 'borderImageSource', 'borderImageWidth'],
	borderInlineEnd: ['borderInlineEndColor', 'borderInlineEndStyle', 'borderInlineEndWidth'],
	borderInlineStart: ['borderInlineStartColor', 'borderInlineStartStyle', 'borderInlineStartWidth'],
	borderLeft: ['borderLeftColor', 'borderLeftStyle', 'borderLeftWidth'],
	borderRadius: ['borderBottomLeftRadius', 'borderBottomRightRadius', 'borderTopLeftRadius', 'borderTopRightRadius'],
	borderRight: ['borderRightColor', 'borderRightStyle', 'borderRightWidth'],
	borderStyle: ['borderBottomStyle', 'borderLeftStyle', 'borderRightStyle', 'borderTopStyle'],
	borderTop: ['borderTopColor', 'borderTopStyle', 'borderTopWidth'],
	borderWidth: ['borderBottomWidth', 'borderLeftWidth', 'borderRightWidth', 'borderTopWidth'],
	columnRule: ['columnRuleColor', 'columnRuleStyle', 'columnRuleWidth'],
	columns: ['columnCount', 'columnWidth'],
	flex: ['flexBasis', 'flexGrow', 'flexShrink'],
	flexFlow: ['flexDirection', 'flexWrap'],
	font: ['fontFamily', 'fontFeatureSettings', 'fontKerning', 'fontLanguageOverride', 'fontSize', 'fontSizeAdjust', 'fontStretch', 'fontStyle', 'fontVariant', 'fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition', 'fontWeight', 'lineHeight'],
	fontVariant: ['fontVariantAlternates', 'fontVariantCaps', 'fontVariantEastAsian', 'fontVariantLigatures', 'fontVariantNumeric', 'fontVariantPosition'],
	gap: ['columnGap', 'rowGap'],
	grid: ['gridAutoColumns', 'gridAutoFlow', 'gridAutoRows', 'gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
	gridArea: ['gridColumnEnd', 'gridColumnStart', 'gridRowEnd', 'gridRowStart'],
	gridColumn: ['gridColumnEnd', 'gridColumnStart'],
	gridColumnGap: ['columnGap'],
	gridGap: ['columnGap', 'rowGap'],
	gridRow: ['gridRowEnd', 'gridRowStart'],
	gridRowGap: ['rowGap'],
	gridTemplate: ['gridTemplateAreas', 'gridTemplateColumns', 'gridTemplateRows'],
	listStyle: ['listStyleImage', 'listStylePosition', 'listStyleType'],
	margin: ['marginBottom', 'marginLeft', 'marginRight', 'marginTop'],
	marker: ['markerEnd', 'markerMid', 'markerStart'],
	mask: ['maskClip', 'maskComposite', 'maskImage', 'maskMode', 'maskOrigin', 'maskPositionX', 'maskPositionY', 'maskRepeat', 'maskSize'],
	maskPosition: ['maskPositionX', 'maskPositionY'],
	outline: ['outlineColor', 'outlineStyle', 'outlineWidth'],
	overflow: ['overflowX', 'overflowY'],
	padding: ['paddingBottom', 'paddingLeft', 'paddingRight', 'paddingTop'],
	placeContent: ['alignContent', 'justifyContent'],
	placeItems: ['alignItems', 'justifyItems'],
	placeSelf: ['alignSelf', 'justifySelf'],
	textDecoration: ['textDecorationColor', 'textDecorationLine', 'textDecorationStyle'],
	textEmphasis: ['textEmphasisColor', 'textEmphasisStyle'],
	transition: ['transitionDelay', 'transitionDuration', 'transitionProperty', 'transitionTimingFunction'],
	wordWrap: ['overflowWrap']
};

var possibleStandardNames = {
	// HTML
	accept: 'accept',
	acceptcharset: 'acceptCharset',
	'accept-charset': 'acceptCharset',
	accesskey: 'accessKey',
	action: 'action',
	allowfullscreen: 'allowFullScreen',
	alt: 'alt',
	as: 'as',
	async: 'async',
	autocapitalize: 'autoCapitalize',
	autocomplete: 'autoComplete',
	autocorrect: 'autoCorrect',
	autofocus: 'autoFocus',
	autoplay: 'autoPlay',
	autosave: 'autoSave',
	capture: 'capture',
	cellpadding: 'cellPadding',
	cellspacing: 'cellSpacing',
	challenge: 'challenge',
	charset: 'charSet',
	checked: 'checked',
	children: 'children',
	cite: 'cite',
	class: 'className',
	classid: 'classID',
	classname: 'className',
	cols: 'cols',
	colspan: 'colSpan',
	content: 'content',
	contenteditable: 'contentEditable',
	contextmenu: 'contextMenu',
	controls: 'controls',
	controlslist: 'controlsList',
	coords: 'coords',
	crossorigin: 'crossOrigin',
	dangerouslysetinnerhtml: 'dangerouslySetInnerHTML',
	data: 'data',
	datetime: 'dateTime',
	default: 'default',
	defaultchecked: 'defaultChecked',
	defaultvalue: 'defaultValue',
	defer: 'defer',
	dir: 'dir',
	disabled: 'disabled',
	download: 'download',
	draggable: 'draggable',
	enctype: 'encType',
	for: 'htmlFor',
	form: 'form',
	formmethod: 'formMethod',
	formaction: 'formAction',
	formenctype: 'formEncType',
	formnovalidate: 'formNoValidate',
	formtarget: 'formTarget',
	frameborder: 'frameBorder',
	headers: 'headers',
	height: 'height',
	hidden: 'hidden',
	high: 'high',
	href: 'href',
	hreflang: 'hrefLang',
	htmlfor: 'htmlFor',
	httpequiv: 'httpEquiv',
	'http-equiv': 'httpEquiv',
	icon: 'icon',
	id: 'id',
	innerhtml: 'innerHTML',
	inputmode: 'inputMode',
	integrity: 'integrity',
	is: 'is',
	itemid: 'itemID',
	itemprop: 'itemProp',
	itemref: 'itemRef',
	itemscope: 'itemScope',
	itemtype: 'itemType',
	keyparams: 'keyParams',
	keytype: 'keyType',
	kind: 'kind',
	label: 'label',
	lang: 'lang',
	list: 'list',
	loop: 'loop',
	low: 'low',
	manifest: 'manifest',
	marginwidth: 'marginWidth',
	marginheight: 'marginHeight',
	max: 'max',
	maxlength: 'maxLength',
	media: 'media',
	mediagroup: 'mediaGroup',
	method: 'method',
	min: 'min',
	minlength: 'minLength',
	multiple: 'multiple',
	muted: 'muted',
	name: 'name',
	nomodule: 'noModule',
	nonce: 'nonce',
	novalidate: 'noValidate',
	open: 'open',
	optimum: 'optimum',
	pattern: 'pattern',
	placeholder: 'placeholder',
	playsinline: 'playsInline',
	poster: 'poster',
	preload: 'preload',
	profile: 'profile',
	radiogroup: 'radioGroup',
	readonly: 'readOnly',
	referrerpolicy: 'referrerPolicy',
	rel: 'rel',
	required: 'required',
	reversed: 'reversed',
	role: 'role',
	rows: 'rows',
	rowspan: 'rowSpan',
	sandbox: 'sandbox',
	scope: 'scope',
	scoped: 'scoped',
	scrolling: 'scrolling',
	seamless: 'seamless',
	selected: 'selected',
	shape: 'shape',
	size: 'size',
	sizes: 'sizes',
	span: 'span',
	spellcheck: 'spellCheck',
	src: 'src',
	srcdoc: 'srcDoc',
	srclang: 'srcLang',
	srcset: 'srcSet',
	start: 'start',
	step: 'step',
	style: 'style',
	summary: 'summary',
	tabindex: 'tabIndex',
	target: 'target',
	title: 'title',
	type: 'type',
	usemap: 'useMap',
	value: 'value',
	width: 'width',
	wmode: 'wmode',
	wrap: 'wrap',

	// SVG
	about: 'about',
	accentheight: 'accentHeight',
	'accent-height': 'accentHeight',
	accumulate: 'accumulate',
	additive: 'additive',
	alignmentbaseline: 'alignmentBaseline',
	'alignment-baseline': 'alignmentBaseline',
	allowreorder: 'allowReorder',
	alphabetic: 'alphabetic',
	amplitude: 'amplitude',
	arabicform: 'arabicForm',
	'arabic-form': 'arabicForm',
	ascent: 'ascent',
	attributename: 'attributeName',
	attributetype: 'attributeType',
	autoreverse: 'autoReverse',
	azimuth: 'azimuth',
	basefrequency: 'baseFrequency',
	baselineshift: 'baselineShift',
	'baseline-shift': 'baselineShift',
	baseprofile: 'baseProfile',
	bbox: 'bbox',
	begin: 'begin',
	bias: 'bias',
	by: 'by',
	calcmode: 'calcMode',
	capheight: 'capHeight',
	'cap-height': 'capHeight',
	clip: 'clip',
	clippath: 'clipPath',
	'clip-path': 'clipPath',
	clippathunits: 'clipPathUnits',
	cliprule: 'clipRule',
	'clip-rule': 'clipRule',
	color: 'color',
	colorinterpolation: 'colorInterpolation',
	'color-interpolation': 'colorInterpolation',
	colorinterpolationfilters: 'colorInterpolationFilters',
	'color-interpolation-filters': 'colorInterpolationFilters',
	colorprofile: 'colorProfile',
	'color-profile': 'colorProfile',
	colorrendering: 'colorRendering',
	'color-rendering': 'colorRendering',
	contentscripttype: 'contentScriptType',
	contentstyletype: 'contentStyleType',
	cursor: 'cursor',
	cx: 'cx',
	cy: 'cy',
	d: 'd',
	datatype: 'datatype',
	decelerate: 'decelerate',
	descent: 'descent',
	diffuseconstant: 'diffuseConstant',
	direction: 'direction',
	display: 'display',
	divisor: 'divisor',
	dominantbaseline: 'dominantBaseline',
	'dominant-baseline': 'dominantBaseline',
	dur: 'dur',
	dx: 'dx',
	dy: 'dy',
	edgemode: 'edgeMode',
	elevation: 'elevation',
	enablebackground: 'enableBackground',
	'enable-background': 'enableBackground',
	end: 'end',
	exponent: 'exponent',
	externalresourcesrequired: 'externalResourcesRequired',
	fill: 'fill',
	fillopacity: 'fillOpacity',
	'fill-opacity': 'fillOpacity',
	fillrule: 'fillRule',
	'fill-rule': 'fillRule',
	filter: 'filter',
	filterres: 'filterRes',
	filterunits: 'filterUnits',
	floodopacity: 'floodOpacity',
	'flood-opacity': 'floodOpacity',
	floodcolor: 'floodColor',
	'flood-color': 'floodColor',
	focusable: 'focusable',
	fontfamily: 'fontFamily',
	'font-family': 'fontFamily',
	fontsize: 'fontSize',
	'font-size': 'fontSize',
	fontsizeadjust: 'fontSizeAdjust',
	'font-size-adjust': 'fontSizeAdjust',
	fontstretch: 'fontStretch',
	'font-stretch': 'fontStretch',
	fontstyle: 'fontStyle',
	'font-style': 'fontStyle',
	fontvariant: 'fontVariant',
	'font-variant': 'fontVariant',
	fontweight: 'fontWeight',
	'font-weight': 'fontWeight',
	format: 'format',
	from: 'from',
	fx: 'fx',
	fy: 'fy',
	g1: 'g1',
	g2: 'g2',
	glyphname: 'glyphName',
	'glyph-name': 'glyphName',
	glyphorientationhorizontal: 'glyphOrientationHorizontal',
	'glyph-orientation-horizontal': 'glyphOrientationHorizontal',
	glyphorientationvertical: 'glyphOrientationVertical',
	'glyph-orientation-vertical': 'glyphOrientationVertical',
	glyphref: 'glyphRef',
	gradienttransform: 'gradientTransform',
	gradientunits: 'gradientUnits',
	hanging: 'hanging',
	horizadvx: 'horizAdvX',
	'horiz-adv-x': 'horizAdvX',
	horizoriginx: 'horizOriginX',
	'horiz-origin-x': 'horizOriginX',
	ideographic: 'ideographic',
	imagerendering: 'imageRendering',
	'image-rendering': 'imageRendering',
	in2: 'in2',
	in: 'in',
	inlist: 'inlist',
	intercept: 'intercept',
	k1: 'k1',
	k2: 'k2',
	k3: 'k3',
	k4: 'k4',
	k: 'k',
	kernelmatrix: 'kernelMatrix',
	kernelunitlength: 'kernelUnitLength',
	kerning: 'kerning',
	keypoints: 'keyPoints',
	keysplines: 'keySplines',
	keytimes: 'keyTimes',
	lengthadjust: 'lengthAdjust',
	letterspacing: 'letterSpacing',
	'letter-spacing': 'letterSpacing',
	lightingcolor: 'lightingColor',
	'lighting-color': 'lightingColor',
	limitingconeangle: 'limitingConeAngle',
	local: 'local',
	markerend: 'markerEnd',
	'marker-end': 'markerEnd',
	markerheight: 'markerHeight',
	markermid: 'markerMid',
	'marker-mid': 'markerMid',
	markerstart: 'markerStart',
	'marker-start': 'markerStart',
	markerunits: 'markerUnits',
	markerwidth: 'markerWidth',
	mask: 'mask',
	maskcontentunits: 'maskContentUnits',
	maskunits: 'maskUnits',
	mathematical: 'mathematical',
	mode: 'mode',
	numoctaves: 'numOctaves',
	offset: 'offset',
	opacity: 'opacity',
	operator: 'operator',
	order: 'order',
	orient: 'orient',
	orientation: 'orientation',
	origin: 'origin',
	overflow: 'overflow',
	overlineposition: 'overlinePosition',
	'overline-position': 'overlinePosition',
	overlinethickness: 'overlineThickness',
	'overline-thickness': 'overlineThickness',
	paintorder: 'paintOrder',
	'paint-order': 'paintOrder',
	panose1: 'panose1',
	'panose-1': 'panose1',
	pathlength: 'pathLength',
	patterncontentunits: 'patternContentUnits',
	patterntransform: 'patternTransform',
	patternunits: 'patternUnits',
	pointerevents: 'pointerEvents',
	'pointer-events': 'pointerEvents',
	points: 'points',
	pointsatx: 'pointsAtX',
	pointsaty: 'pointsAtY',
	pointsatz: 'pointsAtZ',
	prefix: 'prefix',
	preservealpha: 'preserveAlpha',
	preserveaspectratio: 'preserveAspectRatio',
	primitiveunits: 'primitiveUnits',
	property: 'property',
	r: 'r',
	radius: 'radius',
	refx: 'refX',
	refy: 'refY',
	renderingintent: 'renderingIntent',
	'rendering-intent': 'renderingIntent',
	repeatcount: 'repeatCount',
	repeatdur: 'repeatDur',
	requiredextensions: 'requiredExtensions',
	requiredfeatures: 'requiredFeatures',
	resource: 'resource',
	restart: 'restart',
	result: 'result',
	results: 'results',
	rotate: 'rotate',
	rx: 'rx',
	ry: 'ry',
	scale: 'scale',
	security: 'security',
	seed: 'seed',
	shaperendering: 'shapeRendering',
	'shape-rendering': 'shapeRendering',
	slope: 'slope',
	spacing: 'spacing',
	specularconstant: 'specularConstant',
	specularexponent: 'specularExponent',
	speed: 'speed',
	spreadmethod: 'spreadMethod',
	startoffset: 'startOffset',
	stddeviation: 'stdDeviation',
	stemh: 'stemh',
	stemv: 'stemv',
	stitchtiles: 'stitchTiles',
	stopcolor: 'stopColor',
	'stop-color': 'stopColor',
	stopopacity: 'stopOpacity',
	'stop-opacity': 'stopOpacity',
	strikethroughposition: 'strikethroughPosition',
	'strikethrough-position': 'strikethroughPosition',
	strikethroughthickness: 'strikethroughThickness',
	'strikethrough-thickness': 'strikethroughThickness',
	string: 'string',
	stroke: 'stroke',
	strokedasharray: 'strokeDasharray',
	'stroke-dasharray': 'strokeDasharray',
	strokedashoffset: 'strokeDashoffset',
	'stroke-dashoffset': 'strokeDashoffset',
	strokelinecap: 'strokeLinecap',
	'stroke-linecap': 'strokeLinecap',
	strokelinejoin: 'strokeLinejoin',
	'stroke-linejoin': 'strokeLinejoin',
	strokemiterlimit: 'strokeMiterlimit',
	'stroke-miterlimit': 'strokeMiterlimit',
	strokewidth: 'strokeWidth',
	'stroke-width': 'strokeWidth',
	strokeopacity: 'strokeOpacity',
	'stroke-opacity': 'strokeOpacity',
	suppresscontenteditablewarning: 'suppressContentEditableWarning',
	suppresshydrationwarning: 'suppressHydrationWarning',
	surfacescale: 'surfaceScale',
	systemlanguage: 'systemLanguage',
	tablevalues: 'tableValues',
	targetx: 'targetX',
	targety: 'targetY',
	textanchor: 'textAnchor',
	'text-anchor': 'textAnchor',
	textdecoration: 'textDecoration',
	'text-decoration': 'textDecoration',
	textlength: 'textLength',
	textrendering: 'textRendering',
	'text-rendering': 'textRendering',
	to: 'to',
	transform: 'transform',
	typeof: 'typeof',
	u1: 'u1',
	u2: 'u2',
	underlineposition: 'underlinePosition',
	'underline-position': 'underlinePosition',
	underlinethickness: 'underlineThickness',
	'underline-thickness': 'underlineThickness',
	unicode: 'unicode',
	unicodebidi: 'unicodeBidi',
	'unicode-bidi': 'unicodeBidi',
	unicoderange: 'unicodeRange',
	'unicode-range': 'unicodeRange',
	unitsperem: 'unitsPerEm',
	'units-per-em': 'unitsPerEm',
	unselectable: 'unselectable',
	valphabetic: 'vAlphabetic',
	'v-alphabetic': 'vAlphabetic',
	values: 'values',
	vectoreffect: 'vectorEffect',
	'vector-effect': 'vectorEffect',
	version: 'version',
	vertadvy: 'vertAdvY',
	'vert-adv-y': 'vertAdvY',
	vertoriginx: 'vertOriginX',
	'vert-origin-x': 'vertOriginX',
	vertoriginy: 'vertOriginY',
	'vert-origin-y': 'vertOriginY',
	vhanging: 'vHanging',
	'v-hanging': 'vHanging',
	videographic: 'vIdeographic',
	'v-ideographic': 'vIdeographic',
	viewbox: 'viewBox',
	viewtarget: 'viewTarget',
	visibility: 'visibility',
	vmathematical: 'vMathematical',
	'v-mathematical': 'vMathematical',
	vocab: 'vocab',
	widths: 'widths',
	wordspacing: 'wordSpacing',
	'word-spacing': 'wordSpacing',
	writingmode: 'writingMode',
	'writing-mode': 'writingMode',
	x1: 'x1',
	x2: 'x2',
	x: 'x',
	xchannelselector: 'xChannelSelector',
	xheight: 'xHeight',
	'x-height': 'xHeight',
	xlinkactuate: 'xlinkActuate',
	'xlink:actuate': 'xlinkActuate',
	xlinkarcrole: 'xlinkArcrole',
	'xlink:arcrole': 'xlinkArcrole',
	xlinkhref: 'xlinkHref',
	'xlink:href': 'xlinkHref',
	xlinkrole: 'xlinkRole',
	'xlink:role': 'xlinkRole',
	xlinkshow: 'xlinkShow',
	'xlink:show': 'xlinkShow',
	xlinktitle: 'xlinkTitle',
	'xlink:title': 'xlinkTitle',
	xlinktype: 'xlinkType',
	'xlink:type': 'xlinkType',
	xmlbase: 'xmlBase',
	'xml:base': 'xmlBase',
	xmllang: 'xmlLang',
	'xml:lang': 'xmlLang',
	xmlns: 'xmlns',
	'xml:space': 'xmlSpace',
	xmlnsxlink: 'xmlnsXlink',
	'xmlns:xlink': 'xmlnsXlink',
	xmlspace: 'xmlSpace',
	y1: 'y1',
	y2: 'y2',
	y: 'y',
	ychannelselector: 'yChannelSelector',
	z: 'z',
	zoomandpan: 'zoomAndPan'
};

var ariaProperties = {
	'aria-current': 0, // state
	'aria-details': 0,
	'aria-disabled': 0, // state
	'aria-hidden': 0, // state
	'aria-invalid': 0, // state
	'aria-keyshortcuts': 0,
	'aria-label': 0,
	'aria-roledescription': 0,
	// Widget Attributes
	'aria-autocomplete': 0,
	'aria-checked': 0,
	'aria-expanded': 0,
	'aria-haspopup': 0,
	'aria-level': 0,
	'aria-modal': 0,
	'aria-multiline': 0,
	'aria-multiselectable': 0,
	'aria-orientation': 0,
	'aria-placeholder': 0,
	'aria-pressed': 0,
	'aria-readonly': 0,
	'aria-required': 0,
	'aria-selected': 0,
	'aria-sort': 0,
	'aria-valuemax': 0,
	'aria-valuemin': 0,
	'aria-valuenow': 0,
	'aria-valuetext': 0,
	// Live Region Attributes
	'aria-atomic': 0,
	'aria-busy': 0,
	'aria-live': 0,
	'aria-relevant': 0,
	// Drag-and-Drop Attributes
	'aria-dropeffect': 0,
	'aria-grabbed': 0,
	// Relationship Attributes
	'aria-activedescendant': 0,
	'aria-colcount': 0,
	'aria-colindex': 0,
	'aria-colspan': 0,
	'aria-controls': 0,
	'aria-describedby': 0,
	'aria-errormessage': 0,
	'aria-flowto': 0,
	'aria-labelledby': 0,
	'aria-owns': 0,
	'aria-posinset': 0,
	'aria-rowcount': 0,
	'aria-rowindex': 0,
	'aria-rowspan': 0,
	'aria-setsize': 0
};

export {
	translateToKey,
	normalizeKey,
	shorthandToLonghand,
	possibleStandardNames,
	ariaProperties
}